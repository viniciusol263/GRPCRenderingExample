// Code generated by MockGen. DO NOT EDIT.
// Source: ./protobuf/pb/protobuf_grpc.pb.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	pb "grpc/protobuf/pb"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// MockRendererClient is a mock of RendererClient interface.
type MockRendererClient struct {
	ctrl     *gomock.Controller
	recorder *MockRendererClientMockRecorder
}

// MockRendererClientMockRecorder is the mock recorder for MockRendererClient.
type MockRendererClientMockRecorder struct {
	mock *MockRendererClient
}

// NewMockRendererClient creates a new mock instance.
func NewMockRendererClient(ctrl *gomock.Controller) *MockRendererClient {
	mock := &MockRendererClient{ctrl: ctrl}
	mock.recorder = &MockRendererClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRendererClient) EXPECT() *MockRendererClientMockRecorder {
	return m.recorder
}

// CreatePolygons mocks base method.
func (m *MockRendererClient) CreatePolygons(ctx context.Context, opts ...grpc.CallOption) (pb.Renderer_CreatePolygonsClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreatePolygons", varargs...)
	ret0, _ := ret[0].(pb.Renderer_CreatePolygonsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePolygons indicates an expected call of CreatePolygons.
func (mr *MockRendererClientMockRecorder) CreatePolygons(ctx interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePolygons", reflect.TypeOf((*MockRendererClient)(nil).CreatePolygons), varargs...)
}

// CreateTriangle mocks base method.
func (m *MockRendererClient) CreateTriangle(ctx context.Context, opts ...grpc.CallOption) (pb.Renderer_CreateTriangleClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTriangle", varargs...)
	ret0, _ := ret[0].(pb.Renderer_CreateTriangleClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTriangle indicates an expected call of CreateTriangle.
func (mr *MockRendererClientMockRecorder) CreateTriangle(ctx interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTriangle", reflect.TypeOf((*MockRendererClient)(nil).CreateTriangle), varargs...)
}

// GetPolyTriangles mocks base method.
func (m *MockRendererClient) GetPolyTriangles(ctx context.Context, in *pb.Polygon, opts ...grpc.CallOption) (pb.Renderer_GetPolyTrianglesClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetPolyTriangles", varargs...)
	ret0, _ := ret[0].(pb.Renderer_GetPolyTrianglesClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPolyTriangles indicates an expected call of GetPolyTriangles.
func (mr *MockRendererClientMockRecorder) GetPolyTriangles(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPolyTriangles", reflect.TypeOf((*MockRendererClient)(nil).GetPolyTriangles), varargs...)
}

// ListOfPolygons mocks base method.
func (m *MockRendererClient) ListOfPolygons(ctx context.Context, in *pb.Void, opts ...grpc.CallOption) (pb.Renderer_ListOfPolygonsClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOfPolygons", varargs...)
	ret0, _ := ret[0].(pb.Renderer_ListOfPolygonsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOfPolygons indicates an expected call of ListOfPolygons.
func (mr *MockRendererClientMockRecorder) ListOfPolygons(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOfPolygons", reflect.TypeOf((*MockRendererClient)(nil).ListOfPolygons), varargs...)
}

// ListOfTriangles mocks base method.
func (m *MockRendererClient) ListOfTriangles(ctx context.Context, in *pb.Void, opts ...grpc.CallOption) (pb.Renderer_ListOfTrianglesClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOfTriangles", varargs...)
	ret0, _ := ret[0].(pb.Renderer_ListOfTrianglesClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOfTriangles indicates an expected call of ListOfTriangles.
func (mr *MockRendererClientMockRecorder) ListOfTriangles(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOfTriangles", reflect.TypeOf((*MockRendererClient)(nil).ListOfTriangles), varargs...)
}

// SearchPoint mocks base method.
func (m *MockRendererClient) SearchPoint(ctx context.Context, in *pb.Point, opts ...grpc.CallOption) (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SearchPoint", varargs...)
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchPoint indicates an expected call of SearchPoint.
func (mr *MockRendererClientMockRecorder) SearchPoint(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchPoint", reflect.TypeOf((*MockRendererClient)(nil).SearchPoint), varargs...)
}

// MockRenderer_CreatePolygonsClient is a mock of Renderer_CreatePolygonsClient interface.
type MockRenderer_CreatePolygonsClient struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_CreatePolygonsClientMockRecorder
}

// MockRenderer_CreatePolygonsClientMockRecorder is the mock recorder for MockRenderer_CreatePolygonsClient.
type MockRenderer_CreatePolygonsClientMockRecorder struct {
	mock *MockRenderer_CreatePolygonsClient
}

// NewMockRenderer_CreatePolygonsClient creates a new mock instance.
func NewMockRenderer_CreatePolygonsClient(ctrl *gomock.Controller) *MockRenderer_CreatePolygonsClient {
	mock := &MockRenderer_CreatePolygonsClient{ctrl: ctrl}
	mock.recorder = &MockRenderer_CreatePolygonsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_CreatePolygonsClient) EXPECT() *MockRenderer_CreatePolygonsClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockRenderer_CreatePolygonsClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockRenderer_CreatePolygonsClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).Context))
}

// Header mocks base method.
func (m *MockRenderer_CreatePolygonsClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockRenderer_CreatePolygonsClient) Recv() (*pb.Polygon, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Polygon)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_CreatePolygonsClient) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_CreatePolygonsClient) Send(arg0 *pb.Triangle) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).Send), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_CreatePolygonsClient) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockRenderer_CreatePolygonsClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockRenderer_CreatePolygonsClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockRenderer_CreatePolygonsClient)(nil).Trailer))
}

// MockRenderer_CreateTriangleClient is a mock of Renderer_CreateTriangleClient interface.
type MockRenderer_CreateTriangleClient struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_CreateTriangleClientMockRecorder
}

// MockRenderer_CreateTriangleClientMockRecorder is the mock recorder for MockRenderer_CreateTriangleClient.
type MockRenderer_CreateTriangleClientMockRecorder struct {
	mock *MockRenderer_CreateTriangleClient
}

// NewMockRenderer_CreateTriangleClient creates a new mock instance.
func NewMockRenderer_CreateTriangleClient(ctrl *gomock.Controller) *MockRenderer_CreateTriangleClient {
	mock := &MockRenderer_CreateTriangleClient{ctrl: ctrl}
	mock.recorder = &MockRenderer_CreateTriangleClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_CreateTriangleClient) EXPECT() *MockRenderer_CreateTriangleClientMockRecorder {
	return m.recorder
}

// CloseAndRecv mocks base method.
func (m *MockRenderer_CreateTriangleClient) CloseAndRecv() (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseAndRecv")
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloseAndRecv indicates an expected call of CloseAndRecv.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) CloseAndRecv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseAndRecv", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).CloseAndRecv))
}

// CloseSend mocks base method.
func (m *MockRenderer_CreateTriangleClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockRenderer_CreateTriangleClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).Context))
}

// Header mocks base method.
func (m *MockRenderer_CreateTriangleClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).Header))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_CreateTriangleClient) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_CreateTriangleClient) Send(arg0 *pb.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).Send), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_CreateTriangleClient) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockRenderer_CreateTriangleClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockRenderer_CreateTriangleClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockRenderer_CreateTriangleClient)(nil).Trailer))
}

// MockRenderer_GetPolyTrianglesClient is a mock of Renderer_GetPolyTrianglesClient interface.
type MockRenderer_GetPolyTrianglesClient struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_GetPolyTrianglesClientMockRecorder
}

// MockRenderer_GetPolyTrianglesClientMockRecorder is the mock recorder for MockRenderer_GetPolyTrianglesClient.
type MockRenderer_GetPolyTrianglesClientMockRecorder struct {
	mock *MockRenderer_GetPolyTrianglesClient
}

// NewMockRenderer_GetPolyTrianglesClient creates a new mock instance.
func NewMockRenderer_GetPolyTrianglesClient(ctrl *gomock.Controller) *MockRenderer_GetPolyTrianglesClient {
	mock := &MockRenderer_GetPolyTrianglesClient{ctrl: ctrl}
	mock.recorder = &MockRenderer_GetPolyTrianglesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_GetPolyTrianglesClient) EXPECT() *MockRenderer_GetPolyTrianglesClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockRenderer_GetPolyTrianglesClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockRenderer_GetPolyTrianglesClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).Context))
}

// Header mocks base method.
func (m *MockRenderer_GetPolyTrianglesClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockRenderer_GetPolyTrianglesClient) Recv() (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_GetPolyTrianglesClient) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).RecvMsg), m)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_GetPolyTrianglesClient) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockRenderer_GetPolyTrianglesClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockRenderer_GetPolyTrianglesClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockRenderer_GetPolyTrianglesClient)(nil).Trailer))
}

// MockRenderer_ListOfTrianglesClient is a mock of Renderer_ListOfTrianglesClient interface.
type MockRenderer_ListOfTrianglesClient struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_ListOfTrianglesClientMockRecorder
}

// MockRenderer_ListOfTrianglesClientMockRecorder is the mock recorder for MockRenderer_ListOfTrianglesClient.
type MockRenderer_ListOfTrianglesClientMockRecorder struct {
	mock *MockRenderer_ListOfTrianglesClient
}

// NewMockRenderer_ListOfTrianglesClient creates a new mock instance.
func NewMockRenderer_ListOfTrianglesClient(ctrl *gomock.Controller) *MockRenderer_ListOfTrianglesClient {
	mock := &MockRenderer_ListOfTrianglesClient{ctrl: ctrl}
	mock.recorder = &MockRenderer_ListOfTrianglesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_ListOfTrianglesClient) EXPECT() *MockRenderer_ListOfTrianglesClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockRenderer_ListOfTrianglesClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockRenderer_ListOfTrianglesClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).Context))
}

// Header mocks base method.
func (m *MockRenderer_ListOfTrianglesClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockRenderer_ListOfTrianglesClient) Recv() (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_ListOfTrianglesClient) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).RecvMsg), m)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_ListOfTrianglesClient) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockRenderer_ListOfTrianglesClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockRenderer_ListOfTrianglesClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockRenderer_ListOfTrianglesClient)(nil).Trailer))
}

// MockRenderer_ListOfPolygonsClient is a mock of Renderer_ListOfPolygonsClient interface.
type MockRenderer_ListOfPolygonsClient struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_ListOfPolygonsClientMockRecorder
}

// MockRenderer_ListOfPolygonsClientMockRecorder is the mock recorder for MockRenderer_ListOfPolygonsClient.
type MockRenderer_ListOfPolygonsClientMockRecorder struct {
	mock *MockRenderer_ListOfPolygonsClient
}

// NewMockRenderer_ListOfPolygonsClient creates a new mock instance.
func NewMockRenderer_ListOfPolygonsClient(ctrl *gomock.Controller) *MockRenderer_ListOfPolygonsClient {
	mock := &MockRenderer_ListOfPolygonsClient{ctrl: ctrl}
	mock.recorder = &MockRenderer_ListOfPolygonsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_ListOfPolygonsClient) EXPECT() *MockRenderer_ListOfPolygonsClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockRenderer_ListOfPolygonsClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockRenderer_ListOfPolygonsClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).Context))
}

// Header mocks base method.
func (m *MockRenderer_ListOfPolygonsClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockRenderer_ListOfPolygonsClient) Recv() (*pb.Polygon, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Polygon)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_ListOfPolygonsClient) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).RecvMsg), m)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_ListOfPolygonsClient) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockRenderer_ListOfPolygonsClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockRenderer_ListOfPolygonsClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockRenderer_ListOfPolygonsClient)(nil).Trailer))
}

// MockRendererServer is a mock of RendererServer interface.
type MockRendererServer struct {
	ctrl     *gomock.Controller
	recorder *MockRendererServerMockRecorder
}

// MockRendererServerMockRecorder is the mock recorder for MockRendererServer.
type MockRendererServerMockRecorder struct {
	mock *MockRendererServer
}

// NewMockRendererServer creates a new mock instance.
func NewMockRendererServer(ctrl *gomock.Controller) *MockRendererServer {
	mock := &MockRendererServer{ctrl: ctrl}
	mock.recorder = &MockRendererServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRendererServer) EXPECT() *MockRendererServerMockRecorder {
	return m.recorder
}

// CreatePolygons mocks base method.
func (m *MockRendererServer) CreatePolygons(arg0 pb.Renderer_CreatePolygonsServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePolygons", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePolygons indicates an expected call of CreatePolygons.
func (mr *MockRendererServerMockRecorder) CreatePolygons(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePolygons", reflect.TypeOf((*MockRendererServer)(nil).CreatePolygons), arg0)
}

// CreateTriangle mocks base method.
func (m *MockRendererServer) CreateTriangle(arg0 pb.Renderer_CreateTriangleServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTriangle", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTriangle indicates an expected call of CreateTriangle.
func (mr *MockRendererServerMockRecorder) CreateTriangle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTriangle", reflect.TypeOf((*MockRendererServer)(nil).CreateTriangle), arg0)
}

// GetPolyTriangles mocks base method.
func (m *MockRendererServer) GetPolyTriangles(arg0 *pb.Polygon, arg1 pb.Renderer_GetPolyTrianglesServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPolyTriangles", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetPolyTriangles indicates an expected call of GetPolyTriangles.
func (mr *MockRendererServerMockRecorder) GetPolyTriangles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPolyTriangles", reflect.TypeOf((*MockRendererServer)(nil).GetPolyTriangles), arg0, arg1)
}

// ListOfPolygons mocks base method.
func (m *MockRendererServer) ListOfPolygons(arg0 *pb.Void, arg1 pb.Renderer_ListOfPolygonsServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOfPolygons", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOfPolygons indicates an expected call of ListOfPolygons.
func (mr *MockRendererServerMockRecorder) ListOfPolygons(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOfPolygons", reflect.TypeOf((*MockRendererServer)(nil).ListOfPolygons), arg0, arg1)
}

// ListOfTriangles mocks base method.
func (m *MockRendererServer) ListOfTriangles(arg0 *pb.Void, arg1 pb.Renderer_ListOfTrianglesServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOfTriangles", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOfTriangles indicates an expected call of ListOfTriangles.
func (mr *MockRendererServerMockRecorder) ListOfTriangles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOfTriangles", reflect.TypeOf((*MockRendererServer)(nil).ListOfTriangles), arg0, arg1)
}

// SearchPoint mocks base method.
func (m *MockRendererServer) SearchPoint(arg0 context.Context, arg1 *pb.Point) (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchPoint", arg0, arg1)
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchPoint indicates an expected call of SearchPoint.
func (mr *MockRendererServerMockRecorder) SearchPoint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchPoint", reflect.TypeOf((*MockRendererServer)(nil).SearchPoint), arg0, arg1)
}

// mustEmbedUnimplementedRendererServer mocks base method.
func (m *MockRendererServer) mustEmbedUnimplementedRendererServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedRendererServer")
}

// mustEmbedUnimplementedRendererServer indicates an expected call of mustEmbedUnimplementedRendererServer.
func (mr *MockRendererServerMockRecorder) mustEmbedUnimplementedRendererServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedRendererServer", reflect.TypeOf((*MockRendererServer)(nil).mustEmbedUnimplementedRendererServer))
}

// MockUnsafeRendererServer is a mock of UnsafeRendererServer interface.
type MockUnsafeRendererServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeRendererServerMockRecorder
}

// MockUnsafeRendererServerMockRecorder is the mock recorder for MockUnsafeRendererServer.
type MockUnsafeRendererServerMockRecorder struct {
	mock *MockUnsafeRendererServer
}

// NewMockUnsafeRendererServer creates a new mock instance.
func NewMockUnsafeRendererServer(ctrl *gomock.Controller) *MockUnsafeRendererServer {
	mock := &MockUnsafeRendererServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeRendererServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeRendererServer) EXPECT() *MockUnsafeRendererServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedRendererServer mocks base method.
func (m *MockUnsafeRendererServer) mustEmbedUnimplementedRendererServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedRendererServer")
}

// mustEmbedUnimplementedRendererServer indicates an expected call of mustEmbedUnimplementedRendererServer.
func (mr *MockUnsafeRendererServerMockRecorder) mustEmbedUnimplementedRendererServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedRendererServer", reflect.TypeOf((*MockUnsafeRendererServer)(nil).mustEmbedUnimplementedRendererServer))
}

// MockRenderer_CreatePolygonsServer is a mock of Renderer_CreatePolygonsServer interface.
type MockRenderer_CreatePolygonsServer struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_CreatePolygonsServerMockRecorder
}

// MockRenderer_CreatePolygonsServerMockRecorder is the mock recorder for MockRenderer_CreatePolygonsServer.
type MockRenderer_CreatePolygonsServerMockRecorder struct {
	mock *MockRenderer_CreatePolygonsServer
}

// NewMockRenderer_CreatePolygonsServer creates a new mock instance.
func NewMockRenderer_CreatePolygonsServer(ctrl *gomock.Controller) *MockRenderer_CreatePolygonsServer {
	mock := &MockRenderer_CreatePolygonsServer{ctrl: ctrl}
	mock.recorder = &MockRenderer_CreatePolygonsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_CreatePolygonsServer) EXPECT() *MockRenderer_CreatePolygonsServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockRenderer_CreatePolygonsServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).Context))
}

// Recv mocks base method.
func (m *MockRenderer_CreatePolygonsServer) Recv() (*pb.Triangle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Triangle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_CreatePolygonsServer) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_CreatePolygonsServer) Send(arg0 *pb.Polygon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockRenderer_CreatePolygonsServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_CreatePolygonsServer) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockRenderer_CreatePolygonsServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockRenderer_CreatePolygonsServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockRenderer_CreatePolygonsServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockRenderer_CreatePolygonsServer)(nil).SetTrailer), arg0)
}

// MockRenderer_CreateTriangleServer is a mock of Renderer_CreateTriangleServer interface.
type MockRenderer_CreateTriangleServer struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_CreateTriangleServerMockRecorder
}

// MockRenderer_CreateTriangleServerMockRecorder is the mock recorder for MockRenderer_CreateTriangleServer.
type MockRenderer_CreateTriangleServerMockRecorder struct {
	mock *MockRenderer_CreateTriangleServer
}

// NewMockRenderer_CreateTriangleServer creates a new mock instance.
func NewMockRenderer_CreateTriangleServer(ctrl *gomock.Controller) *MockRenderer_CreateTriangleServer {
	mock := &MockRenderer_CreateTriangleServer{ctrl: ctrl}
	mock.recorder = &MockRenderer_CreateTriangleServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_CreateTriangleServer) EXPECT() *MockRenderer_CreateTriangleServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockRenderer_CreateTriangleServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).Context))
}

// Recv mocks base method.
func (m *MockRenderer_CreateTriangleServer) Recv() (*pb.Point, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*pb.Point)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_CreateTriangleServer) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).RecvMsg), m)
}

// SendAndClose mocks base method.
func (m *MockRenderer_CreateTriangleServer) SendAndClose(arg0 *pb.Triangle) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendAndClose", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendAndClose indicates an expected call of SendAndClose.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) SendAndClose(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendAndClose", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).SendAndClose), arg0)
}

// SendHeader mocks base method.
func (m *MockRenderer_CreateTriangleServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_CreateTriangleServer) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockRenderer_CreateTriangleServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockRenderer_CreateTriangleServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockRenderer_CreateTriangleServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockRenderer_CreateTriangleServer)(nil).SetTrailer), arg0)
}

// MockRenderer_GetPolyTrianglesServer is a mock of Renderer_GetPolyTrianglesServer interface.
type MockRenderer_GetPolyTrianglesServer struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_GetPolyTrianglesServerMockRecorder
}

// MockRenderer_GetPolyTrianglesServerMockRecorder is the mock recorder for MockRenderer_GetPolyTrianglesServer.
type MockRenderer_GetPolyTrianglesServerMockRecorder struct {
	mock *MockRenderer_GetPolyTrianglesServer
}

// NewMockRenderer_GetPolyTrianglesServer creates a new mock instance.
func NewMockRenderer_GetPolyTrianglesServer(ctrl *gomock.Controller) *MockRenderer_GetPolyTrianglesServer {
	mock := &MockRenderer_GetPolyTrianglesServer{ctrl: ctrl}
	mock.recorder = &MockRenderer_GetPolyTrianglesServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_GetPolyTrianglesServer) EXPECT() *MockRenderer_GetPolyTrianglesServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockRenderer_GetPolyTrianglesServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_GetPolyTrianglesServer) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_GetPolyTrianglesServer) Send(arg0 *pb.Triangle) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockRenderer_GetPolyTrianglesServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_GetPolyTrianglesServer) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockRenderer_GetPolyTrianglesServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockRenderer_GetPolyTrianglesServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockRenderer_GetPolyTrianglesServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockRenderer_GetPolyTrianglesServer)(nil).SetTrailer), arg0)
}

// MockRenderer_ListOfTrianglesServer is a mock of Renderer_ListOfTrianglesServer interface.
type MockRenderer_ListOfTrianglesServer struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_ListOfTrianglesServerMockRecorder
}

// MockRenderer_ListOfTrianglesServerMockRecorder is the mock recorder for MockRenderer_ListOfTrianglesServer.
type MockRenderer_ListOfTrianglesServerMockRecorder struct {
	mock *MockRenderer_ListOfTrianglesServer
}

// NewMockRenderer_ListOfTrianglesServer creates a new mock instance.
func NewMockRenderer_ListOfTrianglesServer(ctrl *gomock.Controller) *MockRenderer_ListOfTrianglesServer {
	mock := &MockRenderer_ListOfTrianglesServer{ctrl: ctrl}
	mock.recorder = &MockRenderer_ListOfTrianglesServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_ListOfTrianglesServer) EXPECT() *MockRenderer_ListOfTrianglesServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockRenderer_ListOfTrianglesServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_ListOfTrianglesServer) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_ListOfTrianglesServer) Send(arg0 *pb.Triangle) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockRenderer_ListOfTrianglesServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_ListOfTrianglesServer) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockRenderer_ListOfTrianglesServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockRenderer_ListOfTrianglesServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockRenderer_ListOfTrianglesServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockRenderer_ListOfTrianglesServer)(nil).SetTrailer), arg0)
}

// MockRenderer_ListOfPolygonsServer is a mock of Renderer_ListOfPolygonsServer interface.
type MockRenderer_ListOfPolygonsServer struct {
	ctrl     *gomock.Controller
	recorder *MockRenderer_ListOfPolygonsServerMockRecorder
}

// MockRenderer_ListOfPolygonsServerMockRecorder is the mock recorder for MockRenderer_ListOfPolygonsServer.
type MockRenderer_ListOfPolygonsServerMockRecorder struct {
	mock *MockRenderer_ListOfPolygonsServer
}

// NewMockRenderer_ListOfPolygonsServer creates a new mock instance.
func NewMockRenderer_ListOfPolygonsServer(ctrl *gomock.Controller) *MockRenderer_ListOfPolygonsServer {
	mock := &MockRenderer_ListOfPolygonsServer{ctrl: ctrl}
	mock.recorder = &MockRenderer_ListOfPolygonsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer_ListOfPolygonsServer) EXPECT() *MockRenderer_ListOfPolygonsServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockRenderer_ListOfPolygonsServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockRenderer_ListOfPolygonsServer) RecvMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockRenderer_ListOfPolygonsServer) Send(arg0 *pb.Polygon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockRenderer_ListOfPolygonsServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockRenderer_ListOfPolygonsServer) SendMsg(m interface{}) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockRenderer_ListOfPolygonsServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockRenderer_ListOfPolygonsServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockRenderer_ListOfPolygonsServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockRenderer_ListOfPolygonsServer)(nil).SetTrailer), arg0)
}
